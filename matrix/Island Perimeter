You are given row x col grid representing a map where grid[i][j] = 1 represents land and grid[i][j] = 0 represents water.
Grid cells are connected horizontally/vertically (not diagonally). 
The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells).
The island doesn't have "lakes", meaning the water inside isn't connected to the water around the island. One cell is a square with side length 1. 
The grid is rectangular, width and height don't exceed 100. Determine the perimeter of the island.

class Solution:
    def islandPerimeter(self, grid: List[List[int]]) -> int:
        output = 0
        for r in range(len(grid)):
            for c in range(len(grid[0])):
                if grid[r][c] == 0:
                    continue
                if c != 0 and grid[r][c-1] == 1:
                    output -= 2
                if r != 0 and grid[r-1][c] == 1:
                    output -= 2
                output += 4
        return output
        
1. Initialize output variable to 0.
2. Traverse the grid row by row and column by column.
3. If a cell contains a 0, skip it and move to the next cell.
4. If a cell contains a 1, add 4 to the output.
5. Check if the cell to the left also contains a 1, if so, subtract 2 from the output.
6. Check if the cell above also contains a 1, if so, subtract 2 from the output.
7. Return the output variable.
